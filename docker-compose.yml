# Environment variables loaded from .env files in respective directories
# Make sure you have apps/api/.env and apps/web/.env.local configured

services:
  # Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: vantage-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      vantage-network:
        ipv4_address: 172.25.0.10
    command: redis-server --appendonly yes --save 20 1
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: apps/api
      dockerfile: Dockerfile
      target: development
    container_name: vantage-api
    ports:
      - "8000:8000"
    volumes:
      - ./apps/api:/app
      - ./packages/shared:/packages/shared
    env_file:
      - apps/api/.env
    environment:
      # Override Redis URLs for Docker network
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    networks:
      vantage-network:
        ipv4_address: 172.25.0.20
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery Worker
  celery-worker:
    build:
      context: apps/api
      dockerfile: Dockerfile
      target: development
    container_name: vantage-celery-worker
    command: celery -A app.core.celery_app worker --loglevel=info --queues=notifications,classification
    volumes:
      - ./apps/api:/app
      - ./packages/shared:/packages/shared
    env_file:
      - apps/api/.env
    environment:
      # Override Redis URLs for Docker network
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      api:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      vantage-network:
        ipv4_address: 172.25.0.30

  # Next.js Frontend
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      target: development
    container_name: vantage-web
    ports:
      - "3000:3000"
    volumes:
      - ./apps/web:/app/apps/web
      - ./packages/shared:/app/packages/shared
      - ./node_modules:/app/node_modules
      - web-next-cache:/app/apps/web/.next
      - web-turbo-cache:/app/apps/web/.turbo
    env_file:
      - apps/web/.env.local
    environment:
      # Development polling for better file watching in Docker
      - WATCHPACK_POLLING=true
      # Server-side API URL (for SSR in Docker, uses internal network)
      - API_BASE_URL=http://api:8000
    command: pnpm --filter web dev
    depends_on:
      api:
        condition: service_healthy
    networks:
      vantage-network:
        ipv4_address: 172.25.0.40

networks:
  vantage-network:
    driver: bridge
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

volumes:
  redis-data:
  web-next-cache:
  web-turbo-cache:
