"""Add is_internal_note to feedback_comments table

Revision ID: 93aa637add7b
Revises: f5892d7aa0ea
Create Date: 2025-10-18 07:41:12.477680

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "93aa637add7b"
down_revision: Union[str, Sequence[str], None] = "f5892d7aa0ea"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "feedback_comments",
        sa.Column(
            "is_internal_note", sa.Boolean(), nullable=False, server_default="false"
        ),
    )
    op.alter_column(
        "governance_areas",
        "id",
        existing_type=sa.SMALLINT(),
        type_=sa.Integer(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('governance_areas_id_seq'::regclass)"),
    )
    op.alter_column(
        "indicators",
        "governance_area_id",
        existing_type=sa.SMALLINT(),
        type_=sa.Integer(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "indicators",
        "governance_area_id",
        existing_type=sa.Integer(),
        type_=sa.SMALLINT(),
        existing_nullable=False,
    )
    op.alter_column(
        "governance_areas",
        "id",
        existing_type=sa.Integer(),
        type_=sa.SMALLINT(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('governance_areas_id_seq'::regclass)"),
    )
    op.drop_column("feedback_comments", "is_internal_note")
    # ### end Alembic commands ###
