"""Add dynamic assessment schema with indicators and assessment models

Revision ID: de8ece1d7614
Revises: 421de4cd5e1e
Create Date: 2025-10-12 13:51:31.658907

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'de8ece1d7614'
down_revision: Union[str, Sequence[str], None] = '421de4cd5e1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('indicators',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('form_schema', sa.JSON(), nullable=False),
    sa.Column('governance_area_id', sa.SmallInteger(), nullable=False),
    sa.ForeignKeyConstraint(['governance_area_id'], ['governance_areas.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_indicators_id'), 'indicators', ['id'], unique=False)
    op.create_table('assessments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'SUBMITTED_FOR_REVIEW', 'VALIDATED', 'NEEDS_REWORK', name='assessment_status_enum', create_constraint=True), nullable=False),
    sa.Column('blgu_user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('validated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blgu_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessments_id'), 'assessments', ['id'], unique=False)
    op.create_table('assessment_responses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('response_data', sa.JSON(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=False),
    sa.Column('requires_rework', sa.Boolean(), nullable=False),
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('indicator_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['assessments.id'], ),
    sa.ForeignKeyConstraint(['indicator_id'], ['indicators.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assessment_responses_id'), 'assessment_responses', ['id'], unique=False)
    op.create_table('feedback_comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('comment_type', sa.String(), nullable=False),
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('assessor_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['assessor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['response_id'], ['assessment_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_feedback_comments_id'), 'feedback_comments', ['id'], unique=False)
    op.create_table('movs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('storage_path', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'UPLOADED', 'DELETED', name='mov_status_enum', create_constraint=True), nullable=False),
    sa.Column('response_id', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['response_id'], ['assessment_responses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movs_id'), 'movs', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_movs_id'), table_name='movs')
    op.drop_table('movs')
    op.drop_index(op.f('ix_feedback_comments_id'), table_name='feedback_comments')
    op.drop_table('feedback_comments')
    op.drop_index(op.f('ix_assessment_responses_id'), table_name='assessment_responses')
    op.drop_table('assessment_responses')
    op.drop_index(op.f('ix_assessments_id'), table_name='assessments')
    op.drop_table('assessments')
    op.drop_index(op.f('ix_indicators_id'), table_name='indicators')
    op.drop_table('indicators')
    # ### end Alembic commands ###
