"""Remove project and assessment models

Revision ID: 96ccc23e5224
Revises: 5f9b4e3b7a2d
Create Date: 2025-07-19 17:38:45.116692

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96ccc23e5224'
down_revision: Union[str, Sequence[str], None] = '5f9b4e3b7a2d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_assessments_id'), table_name='assessments')
    op.drop_index(op.f('ix_assessments_project_id'), table_name='assessments')
    op.drop_index(op.f('ix_assessments_user_id'), table_name='assessments')
    op.drop_table('assessments')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_owner_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], name='projects_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_projects_owner_id'), 'projects', ['owner_id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('assessments',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PENDING', 'IN_PROGRESS', 'COMPLETED', 'REVIEWED', name='assessmentstatus'), autoincrement=False, nullable=False),
    sa.Column('video_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('video_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('video_duration', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('score_strong', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('score_gallant', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('score_loyal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('score_guiding', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('score_bold', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('overall_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('dominant_trait', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('analysis_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('recommendations', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('processing_started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('processing_completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('assessments_project_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('assessments_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('assessments_pkey'))
    )
    op.create_index(op.f('ix_assessments_user_id'), 'assessments', ['user_id'], unique=False)
    op.create_index(op.f('ix_assessments_project_id'), 'assessments', ['project_id'], unique=False)
    op.create_index(op.f('ix_assessments_id'), 'assessments', ['id'], unique=False)
    # ### end Alembic commands ###
