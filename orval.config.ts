import { defineConfig } from 'orval';

export default defineConfig({
  vantage: {
    input: {
      target: 'http://localhost:8000/openapi.json',
    },
    output: {
      // 🎯 Professional scaling approach: Split by FastAPI tags automatically!
      // This creates organized folders based on your FastAPI route tags
      mode: 'tags-split',
      
      // 📁 API endpoints will be organized by tag in subfolders
      target: 'packages/shared/src/generated/endpoints',
      
      // 📝 Schemas (types) get their own dedicated folder  
      schemas: 'packages/shared/src/generated/schemas',
      
      client: 'react-query',
      baseUrl: 'http://localhost:8000',
      httpClient: 'fetch',
      
      override: {
        query: {
          useQuery: true,
          useMutation: true,
          useInfinite: false,
          options: {
            staleTime: 5 * 60 * 1000, // 5 minutes
            refetchOnWindowFocus: false,
          },
        },
        operationName: (operation, route, verb) => {
          // Use clean operation IDs from FastAPI directly!
          const operationId = operation.operationId || '';
          
          // Simply capitalize the first letter for PascalCase
          return operationId.charAt(0).toUpperCase() + operationId.slice(1);
        },
        header: () => [
          '// 🚀 Auto-generated by Orval (Tag-Split Mode)',
          '// 🔄 Do not edit manually - regenerate with: pnpm generate-types',
          '// 📁 Organized by FastAPI tags for maximum maintainability',
          '',
        ],
      },
    },
  },
}); 